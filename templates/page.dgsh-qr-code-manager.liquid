<div class="page-width">
  <div class="dgsh-admin-container">
    <header class="dgsh-admin-header">
      <h1 class="dgsh-admin-title">QR Code Manager</h1>
      <p class="dgsh-admin-description">Centralized QR code management for your scavenger hunt</p>
    </header>
    
    <!-- Enhanced QR Code Management Section -->
    <section class="dgsh-admin-qr-management">
      <h2 class="dgsh-admin-section-title">QR Code Management</h2>
      <div class="dgsh-admin-qr-description">
        <p>Manage QR codes for the scavenger hunt. Only QR codes created here will be accepted by the system.</p>
      </div>
      
      <!-- Controls -->
      <div class="dgsh-admin-qr-controls">
        <button class="dgsh-admin-add-qr-btn">Add New QR Code</button>
        <button class="dgsh-admin-refresh-qr-btn">Refresh List</button>
        <button class="dgsh-admin-export-qr-btn">Export QR Codes</button>
      </div>
      
      <!-- QR Code List -->
      <div class="dgsh-admin-qr-list">
        <div class="dgsh-admin-loading">Loading QR codes...</div>
      </div>
      
      <!-- QR Code Edit Form -->
      <div class="dgsh-admin-qr-edit-container" style="display:none;">
        <h3 class="dgsh-admin-qr-edit-title">Add New QR Code</h3>
        <form class="dgsh-admin-qr-form">


<div class="dgsh-admin-form-group">
  <label for="qr-custom-code" class="dgsh-admin-label">QR Code ID</label>
  <input type="hidden" id="qr-code-id" class="dgsh-admin-qr-code-id">
  
  <input type="text" id="qr-custom-code" class="dgsh-admin-qr-custom-code" required 
         placeholder="Enter 3-8 characters (A-Z, 0-9)" maxlength="8">
  
  <div class="dgsh-qr-preview">
    <div style="margin-bottom: 5px;">
      <strong>Preview: <span id="qr-preview">GC25-____-__-____</span></strong>
    </div>
    <div id="qr-validation-status" class="dgsh-qr-validation-status"></div>
  </div>
</div>
          
          <div class="dgsh-admin-form-group">
            <label for="qr-location-number" class="dgsh-admin-label">Location Number</label>
            <input type="number" id="qr-location-number" class="dgsh-admin-qr-location" 
                   required min="1" step="1" placeholder="1">
          </div>
          
          <div class="dgsh-admin-form-group">
            <label for="qr-location-name" class="dgsh-admin-label">Location Name/Description</label>
            <input type="text" id="qr-location-name" class="dgsh-admin-qr-location-name" 
                   placeholder="e.g., Main Entrance, Booth 123">
          </div>
          
          <div class="dgsh-admin-form-group">
            <label for="qr-active-status" class="dgsh-admin-label">Status</label>
            <select id="qr-active-status" class="dgsh-admin-qr-status">
              <option value="true">Active</option>
              <option value="false">Inactive</option>
            </select>
          </div>
          
          <div class="dgsh-admin-qr-form-actions">
            <button type="submit" class="dgsh-admin-save-qr-btn">Save QR Code</button>
            <button type="button" class="dgsh-admin-cancel-qr-edit-btn">Cancel</button>
          </div>
        </form>
      </div>
    </section>

    <!-- Enhanced QR Code Statistics Section -->
    <section class="dgsh-admin-qr-statistics">
      <h2 class="dgsh-admin-section-title">QR Code Statistics</h2>
      <div class="dgsh-admin-qr-stats-description">
        <p>Real-time statistics for all managed QR codes and their scan activity.</p>
      </div>
      
      <!-- Statistics Summary -->
      <div class="dgsh-admin-qr-stats-summary">
        <div class="dgsh-admin-stat-item">
          <div class="dgsh-admin-stat-value" id="total-qr-codes">0</div>
          <div class="dgsh-admin-stat-label">Total QR Codes</div>
        </div>
        <div class="dgsh-admin-stat-item">
          <div class="dgsh-admin-stat-value" id="active-qr-codes">0</div>
          <div class="dgsh-admin-stat-label">Active Codes</div>
        </div>
        <div class="dgsh-admin-stat-item">
          <div class="dgsh-admin-stat-value" id="most-scanned-location">-</div>
          <div class="dgsh-admin-stat-label">Most Scanned Location</div>
        </div>
        <div class="dgsh-admin-stat-item">
          <div class="dgsh-admin-stat-value" id="total-scans">0</div>
          <div class="dgsh-admin-stat-label">Total Scans</div>
        </div>
      </div>
      
      <!-- Detailed Statistics Table -->
      <div class="dgsh-admin-qr-stats-table">
        <div class="dgsh-admin-table-container">
          <table class="dgsh-admin-table">
            <thead>
              <tr>
                <th>Location</th>
                <th>QR Code</th>
                <th>Total Scans</th>
                <th>Last Scanned</th>
                <th>Status</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody id="qr-stats-body">
              <tr><td colspan="6" class="dgsh-admin-loading">Loading statistics...</td></tr>
            </tbody>
          </table>
        </div>
      </div>
    </section>

    <!-- Legacy QR Code Display Section -->
    <section class="dgsh-admin-stats">
      <h2 class="dgsh-admin-section-title">Scavenger Hunt Statistics</h2>
      <div class="dgsh-admin-stats-grid">
        <div class="dgsh-admin-stat-card">
          <div class="dgsh-admin-stat-value" id="total-scans">0</div>
          <div class="dgsh-admin-stat-label">Total Scans</div>
        </div>
        <div class="dgsh-admin-stat-card">
          <div class="dgsh-admin-stat-value" id="unique-users">0</div>
          <div class="dgsh-admin-stat-label">Unique Participants</div>
        </div>
        <div class="dgsh-admin-stat-card">
          <div class="dgsh-admin-stat-value" id="completion-rate">0%</div>
          <div class="dgsh-admin-stat-label">Completion Rate</div>
        </div>
        <div class="dgsh-admin-stat-card">
          <div class="dgsh-admin-stat-value" id="most-scanned">-</div>
          <div class="dgsh-admin-stat-label">Most Popular Location</div>
        </div>
      </div>
      
      <h3 class="dgsh-admin-subsection-title">Location Scan Statistics</h3>
      <div class="dgsh-admin-table-container">
        <table class="dgsh-admin-table">
          <thead>
            <tr>
              <th>Location</th><th>Code</th><th>Total Scans</th><th>Last Scanned</th><th>Status</th>
            </tr>
          </thead>
          <tbody id="location-stats-body">
            <tr><td colspan="5" class="dgsh-admin-loading">Loading scan statistics...</td></tr>
          </tbody>
        </table>
      </div>
    </section>
    
    <section class="dgsh-admin-secure-codes">
      <h2 class="dgsh-admin-section-title">Scavenger Hunt QR Codes</h2>
      <p class="dgsh-admin-section-description">Here are scannable QR codes with secure formats for your event. Each code represents a different location.</p>
      <div class="dgsh-admin-table-actions">
        <button id="dgsh-print-all-btn" class="dgsh-admin-print-all">Print All Codes</button>
      </div>
      <div id="dgsh-codes-grid" class="dgsh-admin-secure-codes-grid">
        <div class="dgsh-admin-loading">Loading QR codes...</div>
      </div>
    </section>

    <!-- QR Code Preview Modal -->
    <div id="dgsh-modal" class="dgsh-admin-modal-container">
      <div class="dgsh-admin-modal">
        <div class="dgsh-admin-modal-content">
          <span id="dgsh-modal-close" class="dgsh-admin-modal-close">&times;</span>
          <h3 id="dgsh-modal-title" class="dgsh-admin-modal-title">QR Code Preview</h3>
          <div id="dgsh-modal-qr" class="dgsh-admin-modal-qr"></div>
          <div class="dgsh-admin-modal-info">
            <div id="dgsh-modal-code" class="dgsh-admin-modal-code"></div>
            <div id="dgsh-modal-url" class="dgsh-admin-modal-url"></div>
          </div>
          <div class="dgsh-admin-modal-actions">
            <button id="dgsh-modal-download" class="dgsh-admin-modal-download">Download SVG</button>
            <button id="dgsh-modal-print" class="dgsh-admin-modal-print">Print Code</button>
          </div>
        </div>
      </div>
    </div>
    
    <div id="print-template" style="display: none;"></div>
  </div>
</div>

<!-- Enhanced Styles for QR Management with Mobile Responsive Fixes -->
<style>
  .dgsh-admin-container {
    font-family: -apple-system, sans-serif;
    padding: 20px;
    max-width: 1200px;
    margin: 0 auto;
  }
  
  .dgsh-admin-header {
    margin-bottom: 30px;
    text-align: center;
  }
  
  .dgsh-admin-title {
    font-size: 32px;
    font-weight: 700;
    margin-bottom: 10px;
  }
  
  .dgsh-admin-description {
    font-size: 16px;
    color: #666;
    max-width: 600px;
    margin: 0 auto;
  }
  
  .dgsh-admin-section-title {
    font-size: 24px;
    margin-bottom: 15px;
    padding-bottom: 10px;
    border-bottom: 1px solid #eaeaea;
  }
  
  .dgsh-admin-subsection-title {
    font-size: 20px;
    margin: 25px 0 15px;
  }
  
  .dgsh-admin-section-description {
    margin-bottom: 20px;
    color: #666;
  }
  
  .dgsh-admin-loading {
    color: #0c5460;
    background-color: #d1ecf1;
    border: 1px solid #bee5eb;
    padding: 10px;
    border-radius: 4px;
    margin-top: 10px;
    text-align: center;
  }

  .dgsh-admin-empty {
    color: #6c757d;
    background-color: #f8f9fa;
    border: 1px solid #e9ecef;
    padding: 20px;
    border-radius: 4px;
    text-align: center;
    font-style: italic;
  }

  .dgsh-admin-error {
    color: #721c24;
    background-color: #f8d7da;
    border: 1px solid #f5c6cb;
    padding: 10px;
    border-radius: 4px;
    margin-top: 10px;
  }
  
  .dgsh-admin-stats, .dgsh-admin-secure-codes, .dgsh-admin-qr-management, .dgsh-admin-qr-statistics {
    background-color: #fff;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    padding: 25px;
    margin-bottom: 30px;
  }
  
  .dgsh-admin-stats-grid, .dgsh-admin-qr-stats-summary {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
    gap: 20px;
    margin-bottom: 25px;
  }
  
  .dgsh-admin-stat-card, .dgsh-admin-stat-item {
    background-color: #f8f9fa;
    border-radius: 8px;
    padding: 20px;
    text-align: center;
    box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    transition: transform 0.2s;
  }
  
  .dgsh-admin-stat-card:hover, .dgsh-admin-stat-item:hover {
    transform: translateY(-5px);
  }
  
  .dgsh-admin-stat-value {
    font-size: 32px;
    font-weight: 700;
    color: #007bff;
    margin-bottom: 5px;
  }
  
  .dgsh-admin-stat-label {
    color: #6c757d;
    font-size: 14px;
  }
  
  .dgsh-admin-table-container {
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
    position: relative;
    width: 100%;
  }
  
  .dgsh-admin-table {
    width: 100%;
    border-collapse: collapse;
    min-width: 100%;
  }
  
  .dgsh-admin-table th, .dgsh-admin-table td {
    padding: 12px 15px;
    text-align: left;
    border-bottom: 1px solid #eee;
  }
  
  .dgsh-admin-table th {
    background-color: #f8f9fa;
    font-weight: 600;
  }
  
  .dgsh-admin-table tbody tr:hover {
    background-color: #f8f9fa;
  }
  
  .dgsh-admin-table .code-value {
    font-family: monospace;
    font-size: 13px;
  }
  
  .dgsh-admin-table .status-active, .qr-status-active {
    color: #28a745;
    font-weight: 600;
  }
  
  .dgsh-admin-table .status-inactive, .qr-status-inactive {
    color: #dc3545;
    font-weight: 600;
  }
  
  .dgsh-admin-secure-codes-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 20px;
    margin-top: 20px;
  }
  
  .dgsh-admin-secure-code-item {
    border: 1px solid #e9ecef;
    border-radius: 8px;
    padding: 15px;
    background-color: #f8f9fa;
    transition: transform 0.2s, box-shadow 0.2s;
  }
  
  .dgsh-admin-secure-code-item:hover {
    transform: translateY(-3px);
    box-shadow: 0 5px 15px rgba(0,0,0,0.1);
  }
  
  .dgsh-admin-secure-code-qr {
    display: flex;
    justify-content: center;
    margin-bottom: 10px;
  }
  
  .dgsh-admin-secure-code-info {
    text-align: center;
  }
  
  .dgsh-admin-secure-code-location {
    font-weight: 600;
    margin-bottom: 5px;
  }
  
  .dgsh-admin-secure-code-value {
    font-family: monospace;
    background-color: #e9ecef;
    padding: 5px;
    border-radius: 4px;
    margin-bottom: 10px;
    word-break: break-all;
    font-size: 12px;
  }

  /* Enhanced QR Management Styles */
  .dgsh-admin-qr-description, .dgsh-admin-qr-stats-description {
    margin-bottom: 20px;
    color: #6c757d;
  }

  .dgsh-admin-qr-controls {
    display: flex;
    gap: 10px;
    margin-bottom: 20px;
    flex-wrap: wrap;
  }

  .dgsh-admin-add-qr-btn, .dgsh-admin-refresh-qr-btn, .dgsh-admin-export-qr-btn,
  .dgsh-admin-download-qr, .dgsh-admin-view-code, .dgsh-admin-toggle-code, 
  .dgsh-admin-modal-download, .dgsh-admin-modal-print, .dgsh-admin-print-all {
    padding: 8px 12px;
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 4px;
    font-size: 12px; 
    min-width: auto;
    cursor: pointer;
  }

  .dgsh-admin-add-qr-btn { background-color: #28a745; }
  .dgsh-admin-refresh-qr-btn { background-color: #6c757d; }
  .dgsh-admin-export-qr-btn { background-color: #007bff; }

  .dgsh-admin-add-qr-btn:hover { background-color: #218838; }
  .dgsh-admin-refresh-qr-btn:hover { background-color: #5a6268; }
  .dgsh-admin-export-qr-btn:hover { background-color: #0069d9; }

  /* QR Edit Form */
  .dgsh-admin-qr-edit-container {
    margin-top: 30px;
    padding: 20px;
    background-color: #f8f9fa;
    border-radius: 8px;
    border: 1px solid #e9ecef;
  }

  .dgsh-admin-qr-edit-title {
    margin-top: 0;
    margin-bottom: 20px;
    font-size: 18px;
    font-weight: 600;
    color: #343a40;
  }

  .dgsh-admin-qr-form {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 15px;
  }

  .dgsh-admin-form-group {
    margin-bottom: 15px;
  }

  .dgsh-admin-form-group:nth-child(3), .dgsh-admin-qr-form-actions {
    grid-column: 1 / span 2;
  }

  .dgsh-admin-label {
    display: block;
    margin-bottom: 8px;
    font-weight: 500;
    color: #495057;
  }

  .dgsh-admin-qr-code-id, .dgsh-admin-qr-location, .dgsh-admin-qr-location-name, .dgsh-admin-qr-status {
    width: 100%;
    padding: 10px 12px;
    font-size: 16px;
    border: 1px solid #ced4da;
    border-radius: 4px;
    transition: border-color 0.2s;
  }

  .dgsh-admin-qr-code-id:focus, .dgsh-admin-qr-location:focus, 
  .dgsh-admin-qr-location-name:focus, .dgsh-admin-qr-status:focus {
    border-color: #007bff;
    outline: none;
    box-shadow: 0 0 0 3px rgba(0,123,255,0.25);
  }

  .dgsh-admin-form-help {
    font-size: 12px;
    color: #6c757d;
    margin-top: 4px;
    display: block;
  }

  .dgsh-admin-qr-form-actions {
    display: flex;
    justify-content: flex-end;
    gap: 10px;
    margin-top: 10px;
  }

  .dgsh-admin-save-qr-btn, .dgsh-admin-cancel-qr-edit-btn {
    padding: 10px 20px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-weight: 500;
  }

  .dgsh-admin-save-qr-btn { background-color: #28a745; color: white; }
  .dgsh-admin-cancel-qr-edit-btn { background-color: #6c757d; color: white; }

  /* Action buttons in table */
  .dgsh-admin-edit-qr-btn, .dgsh-admin-delete-qr-btn, .dgsh-admin-view-qr-btn {
    padding: 6px 12px;
    border: none;
    border-radius: 4px;
    margin-right: 5px;
    font-size: 12px;
    cursor: pointer;
    margin-bottom: 2px;
  }

  .dgsh-admin-edit-qr-btn { background-color: #007bff; color: white; }
  .dgsh-admin-delete-qr-btn { background-color: #dc3545; color: white; }
  .dgsh-admin-view-qr-btn { background-color: #6c757d; color: white; }

  .dgsh-admin-table-actions {
    display: flex;
    gap: 10px;
    margin-bottom: 15px;
  }
  
  .dgsh-admin-modal-container {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0,0,0,0.5);
    display: none;
    align-items: center;
    justify-content: center;
    z-index: 1000;
  }
  
  .dgsh-admin-modal {
    background-color: white;
    border-radius: 8px;
    padding: 25px;
    max-width: 500px;
    width: 90%;
    box-shadow: 0 5px 15px rgba(0,0,0,0.3);
    position: relative;
  }
  
  .dgsh-admin-modal-close {
    position: absolute;
    top: 10px;
    right: 15px;
    font-size: 24px;
    cursor: pointer;
  }
  
  .dgsh-admin-modal-title {
    margin-top: 0;
    margin-bottom: 20px;
    text-align: center;
  }
  
  .dgsh-admin-modal-qr, .dgsh-admin-modal-code {
    display: flex;
    justify-content: center;
    margin-bottom: 15px;
  }
  
  .dgsh-admin-modal-code {
    font-family: monospace;
    background-color: #f8f9fa;
    padding: 10px;
    border-radius: 4px;
    text-align: center;
    word-break: break-all;
  }
  
  .dgsh-admin-modal-url {
    font-size: 12px;
    color: #6c757d;
    text-align: center;
    margin-bottom: 15px;
    word-break: break-all;
  }
  
  .dgsh-admin-modal-actions {
    display: flex;
    justify-content: center;
    gap: 10px;
  }

  /* Mobile Responsive Fixes */
  @media (max-width: 768px) {
    .dgsh-admin-container {
      padding: 15px 10px;
      max-width: 100vw;
      overflow-x: hidden;
    }
    
    .page-width {
      max-width: 100%;
      padding: 0;
    }
    
    .dgsh-admin-title {
      font-size: 24px;
    }
    
    .dgsh-admin-section-title {
      font-size: 20px;
    }
    
    .dgsh-admin-subsection-title {
      font-size: 18px;
    }
    
    /* Table container fixes */
    .dgsh-admin-table-container {
      margin: 0 -15px 20px -15px;
      padding: 0 15px;
      overflow-x: auto;
      -webkit-overflow-scrolling: touch;
    }
    
    .dgsh-admin-table {
      min-width: 650px;
      font-size: 14px;
    }
    
    .dgsh-admin-table th,
    .dgsh-admin-table td {
      padding: 8px 6px;
      white-space: nowrap;
    }
    
    /* Sticky action column */
    .dgsh-admin-table th:last-child,
    .dgsh-admin-table td:last-child {
      position: sticky;
      right: 0;
      background: white;
      box-shadow: -2px 0 4px rgba(0,0,0,0.1);
      z-index: 10;
      border-left: 1px solid #e9ecef;
      min-width: 110px;
    }
    
    /* Mobile action buttons */
    .dgsh-admin-table td:last-child button {
      display: block;
      width: 100%;
      margin: 2px 0;
      padding: 4px 6px;
      font-size: 10px;
    }
    
    /* QR code display mobile */
    .dgsh-admin-table code,
    .qr-code-display,
    .dgsh-admin-secure-code-value {
      font-size: 10px;
      word-break: break-all;
      max-width: 120px;
      display: block;
    }
    
    /* Grid responsive */
    .dgsh-admin-stats-grid,
    .dgsh-admin-qr-stats-summary {
      grid-template-columns: 1fr 1fr;
      gap: 15px;
    }
    
    .dgsh-admin-secure-codes-grid {
      grid-template-columns: 1fr;
      gap: 15px;
    }
    
    /* Controls responsive */
    .dgsh-admin-qr-controls,
    .dgsh-admin-table-actions {
      flex-direction: column;
      gap: 8px;
    }
    
    .dgsh-admin-qr-controls button,
    .dgsh-admin-table-actions button {
      width: 100%;
    }
    
    /* Form responsive */
    .dgsh-admin-qr-form {
      grid-template-columns: 1fr;
    }
    
    .dgsh-admin-form-group:nth-child(3),
    .dgsh-admin-qr-form-actions {
      grid-column: 1;
    }
    
    .dgsh-admin-qr-form-actions {
      flex-direction: column;
    }
    
    .dgsh-admin-save-qr-btn,
    .dgsh-admin-cancel-qr-edit-btn {
      width: 100%;
      margin-bottom: 8px;
    }
    
    /* Modal responsive */
    .dgsh-admin-modal {
      width: 95%;
      margin: 10px;
      padding: 15px;
    }
    
    .dgsh-admin-modal-qr img {
      max-width: 250px;
      width: 100%;
      height: auto;
    }
    
    .dgsh-admin-modal-actions {
      flex-direction: column;
      gap: 8px;
    }
    
    .dgsh-admin-modal-actions button {
      width: 100%;
    }
  }
  
  /* Small mobile fixes */
  @media (max-width: 480px) {
    .dgsh-admin-container {
      padding: 10px 5px;
    }
    
    .dgsh-admin-table-container {
      margin: 0 -10px 15px -10px;
      padding: 0 10px;
    }
    
    .dgsh-admin-table {
      min-width: 550px;
      font-size: 12px;
    }
    
    .dgsh-admin-table th,
    .dgsh-admin-table td {
      padding: 6px 4px;
    }
    
    .dgsh-admin-table th:last-child,
    .dgsh-admin-table td:last-child {
      min-width: 90px;
    }
    
    .dgsh-admin-table td:last-child button {
      padding: 3px 4px;
      font-size: 9px;
    }
    
    .dgsh-admin-stats-grid,
    .dgsh-admin-qr-stats-summary {
      grid-template-columns: 1fr;
      gap: 10px;
    }
    
    .dgsh-admin-stat-item,
    .dgsh-admin-stat-card {
      padding: 15px 10px;
    }
    
    .dgsh-admin-stat-value {
      font-size: 24px;
    }
    
    .dgsh-admin-stat-label {
      font-size: 12px;
    }
  }
  
  @media print {
    body * { visibility: hidden; }
    #print-template, #print-template * { visibility: visible; }
    #print-template {
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;
      display: block !important;
    }
    .dgsh-print-grid {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: 20px;
    }
    .dgsh-print-item {
      padding: 15px;
      border: 1px solid #ccc;
      page-break-inside: avoid;
      text-align: center;
    }
  }
</style>

<!-- Firebase & Scripts -->
<script src="https://www.gstatic.com/firebasejs/9.19.1/firebase-app-compat.js"></script>
<script src="https://www.gstatic.com/firebasejs/9.19.1/firebase-firestore-compat.js"></script>
<script src="https://www.gstatic.com/firebasejs/9.19.1/firebase-auth-compat.js"></script>
{{ 'dgsh-qr-ajax.js' | asset_url | script_tag }}
<script>
  // Firebase configuration
  const firebaseConfig = {
    apiKey: "AIzaSyAedFZVW9mSR61cuI4RxMHY-VmfmYdsm2U",
    authDomain: "doomlings-hunt-new.firebaseapp.com",
    projectId: "doomlings-hunt-new",
    storageBucket: "doomlings-hunt-new.firebasestorage.app",
    messagingSenderId: "913963611565",
    appId: "1:913963611565:web:2f4d813b70c4268cf01d24"
  };

  // Initialize Firebase
  firebase.initializeApp(firebaseConfig);
  console.log("Firebase initialized successfully");

  document.addEventListener('DOMContentLoaded', function() {
    console.log("Initializing enhanced QR code manager...");
    
    // Enhanced QR Code Management Module
    const DGSHQRManager = (function() {
      let _initialized = false;
      let _editingQRCode = null;
      let _qrCodes = [];

      const init = function() {
        if (_initialized) return true;

        try {
          console.log("Setting up enhanced QR code manager...");
          
          firebase.auth().signInAnonymously().then(() => {
            console.log("Firebase authenticated");
            setupEventListeners();
            loadQRCodes();
            loadQRStatistics();
          }).catch(error => {
            console.error("Firebase auth error:", error);
          });
          
          _initialized = true;
          return true;
        } catch (error) {
          console.error("Error initializing QR manager:", error);
          return false;
        }
      };

      const setupEventListeners = function() {
        const addBtn = document.querySelector('.dgsh-admin-add-qr-btn');
        if (addBtn) addBtn.addEventListener('click', showAddQRForm);

        const refreshBtn = document.querySelector('.dgsh-admin-refresh-qr-btn');
        if (refreshBtn) {
          refreshBtn.addEventListener('click', function() {
            loadQRCodes();
            loadQRStatistics();
          });
        }

        const exportBtn = document.querySelector('.dgsh-admin-export-qr-btn');
        if (exportBtn) exportBtn.addEventListener('click', exportQRCodes);

        const form = document.querySelector('.dgsh-admin-qr-form');
        if (form) {
          form.addEventListener('submit', function(e) {
            e.preventDefault();
            saveQRCode();
          });
        }

        const cancelBtn = document.querySelector('.dgsh-admin-cancel-qr-edit-btn');
        if (cancelBtn) cancelBtn.addEventListener('click', hideQRForm);

        const modalClose = document.getElementById('dgsh-modal-close');
        const modal = document.getElementById('dgsh-modal');
        if (modalClose && modal) {
          modalClose.addEventListener('click', () => {
            modal.style.display = 'none';
          });
        }
      };

      const loadQRCodes = async function() {
        const qrList = document.querySelector('.dgsh-admin-qr-list');
        if (!qrList) return;

        qrList.innerHTML = '<div class="dgsh-admin-loading">Loading QR codes...</div>';

        try {
          const db = firebase.firestore();
          const snapshot = await db.collection('valid_codes').get();
          _qrCodes = snapshot.docs.map(doc => ({
            id: doc.id,
            code: doc.id,
            ...doc.data()
          }));

          console.log(`Loaded ${_qrCodes.length} QR codes`);
          renderQRCodesTable();
          updateLegacyGrid();
        } catch (error) {
          console.error("Error loading QR codes:", error);
          qrList.innerHTML = `<div class="dgsh-admin-error">Error loading QR codes: ${error.message}</div>`;
        }
      };

      const renderQRCodesTable = function() {
        const qrList = document.querySelector('.dgsh-admin-qr-list');
        if (!qrList) return;

        if (_qrCodes.length === 0) {
          qrList.innerHTML = '<div class="dgsh-admin-empty">No QR codes found. Add one to get started.</div>';
          return;
        }

        const sortedCodes = [..._qrCodes].sort((a, b) => {
          const aLoc = a.locationNumber || 0;
          const bLoc = b.locationNumber || 0;
          return aLoc - bLoc;
        });

        let html = `
          <div class="dgsh-admin-table-container">
            <table class="dgsh-admin-table">
              <thead>
                <tr>
                  <th>QR Code ID</th>
                  <th>Location #</th>
                  <th>Location Name</th>
                  <th>Status</th>
                  <th>Created</th>
                  <th>Actions</th>
                </tr>
              </thead>
              <tbody>
        `;

        sortedCodes.forEach(qr => {
          const createdDate = qr.updatedAt ? 
            (qr.updatedAt.toDate ? qr.updatedAt.toDate() : new Date(qr.updatedAt)) : 
            new Date();
          
          html += `
            <tr data-qr-id="${qr.code}">
              <td><code>${qr.code}</code></td>
              <td>${qr.locationNumber || '-'}</td>
              <td>${qr.locationName || qr.description || '-'}</td>
              <td><span class="${qr.active !== false ? 'qr-status-active' : 'qr-status-inactive'}">${qr.active !== false ? 'Active' : 'Inactive'}</span></td>
              <td>${createdDate.toLocaleDateString()}</td>
              <td>
                <button class="dgsh-admin-edit-qr-btn" data-qr-code="${qr.code}">Edit</button>
                <button class="dgsh-admin-view-qr-btn" data-qr-code="${qr.code}">View</button>
                <button class="dgsh-admin-delete-qr-btn" data-qr-code="${qr.code}">Delete</button>
              </td>
            </tr>
          `;
        });

        html += '</tbody></table></div>';
        qrList.innerHTML = html;
        addTableEventListeners();
      };

      const addTableEventListeners = function() {
        document.querySelectorAll('.dgsh-admin-edit-qr-btn').forEach(btn => {
          btn.addEventListener('click', function() {
            const qrCode = this.getAttribute('data-qr-code');
            const qrData = _qrCodes.find(qr => qr.code === qrCode);
            showEditQRForm(qrCode, qrData);
          });
        });

        document.querySelectorAll('.dgsh-admin-view-qr-btn').forEach(btn => {
          btn.addEventListener('click', function() {
            const qrCode = this.getAttribute('data-qr-code');
            showQRModal(qrCode);
          });
        });

        document.querySelectorAll('.dgsh-admin-delete-qr-btn').forEach(btn => {
          btn.addEventListener('click', function() {
            const qrCode = this.getAttribute('data-qr-code');
            deleteQRCode(qrCode);
          });
        });
      };

      const showAddQRForm = function() {
        document.getElementById('qr-custom-code').readOnly = false;
        const form = document.querySelector('.dgsh-admin-qr-edit-container');
        const title = document.querySelector('.dgsh-admin-qr-edit-title');
        
        if (!form || !title) return;

        document.getElementById('qr-code-id').value = '';
        document.getElementById('qr-location-number').value = '';
        document.getElementById('qr-location-name').value = '';
        document.getElementById('qr-active-status').value = 'true';
        document.getElementById('qr-code-id').readOnly = false;

        title.textContent = 'Add New QR Code';
        _editingQRCode = null;
        form.style.display = 'block';
      };

      const showEditQRForm = function(qrCode, qrData) {
        document.getElementById('qr-custom-code').readOnly = true;
        const form = document.querySelector('.dgsh-admin-qr-edit-container');
        const title = document.querySelector('.dgsh-admin-qr-edit-title');
        
        if (!form || !title || !qrData) return;

        document.getElementById('qr-code-id').value = qrCode;
        document.getElementById('qr-location-number').value = qrData.locationNumber || '';
        document.getElementById('qr-location-name').value = qrData.locationName || qrData.description || '';
        document.getElementById('qr-active-status').value = qrData.active !== false ? 'true' : 'false';
        document.getElementById('qr-code-id').readOnly = true;

        title.textContent = `Edit QR Code: ${qrCode}`;
        _editingQRCode = qrCode;
        form.style.display = 'block';
      };

      const hideQRForm = function() {
        const form = document.querySelector('.dgsh-admin-qr-edit-container');
        if (form) {
          form.style.display = 'none';
          _editingQRCode = null;
        }
      };

      const saveQRCode = async function() {
        const codeId = document.getElementById('qr-code-id').value.trim();
        const locationNumber = parseInt(document.getElementById('qr-location-number').value);
        const locationName = document.getElementById('qr-location-name').value.trim();
        const active = document.getElementById('qr-active-status').value === 'true';

        if (!codeId || isNaN(locationNumber) || locationNumber < 1) {
          alert('Please fill all required fields with valid values.');
          return;
        }

        const pattern = /^GC25-[A-Z0-9]+-[0-9]{2}-[A-Z0-9]+$/;
        if (!pattern.test(codeId)) {
          alert('QR Code ID must follow the format: GC25-[CODE]-[LOCATION]-[VALIDATION]');
          return;
        }

        try {
          const qrData = {
            locationNumber: locationNumber,
            locationName: locationName,
            description: locationName,
            active: active,
            updatedAt: firebase.firestore.FieldValue.serverTimestamp()
          };

          const db = firebase.firestore();
          await db.collection('valid_codes').doc(codeId).set(qrData);
          
          hideQRForm();
          loadQRCodes();
          loadQRStatistics();
          alert(_editingQRCode ? 'QR code updated successfully!' : 'QR code created successfully!');

        } catch (error) {
          console.error("Error saving QR code:", error);
          alert(`Error saving QR code: ${error.message}`);
        }
      };

      const deleteQRCode = async function(qrCode) {
        if (!qrCode || !confirm(`Are you sure you want to delete QR code "${qrCode}"? This cannot be undone.`)) {
          return;
        }

        try {
          const db = firebase.firestore();
          await db.collection('valid_codes').doc(qrCode).delete();
          
          loadQRCodes();
          loadQRStatistics();
          alert('QR code deleted successfully!');

        } catch (error) {
          console.error("Error deleting QR code:", error);
          alert(`Error deleting QR code: ${error.message}`);
        }
      };

      const loadQRStatistics = async function() {
        try {
          const totalCodes = _qrCodes.length;
          const activeCodes = _qrCodes.filter(qr => qr.active !== false).length;

          document.getElementById('total-qr-codes').textContent = totalCodes;
          document.getElementById('active-qr-codes').textContent = activeCodes;

          await loadScanStatistics();

        } catch (error) {
          console.error("Error loading QR statistics:", error);
        }
      };

      const loadScanStatistics = async function() {
        const statsBody = document.getElementById('qr-stats-body');
        if (!statsBody) return;

        statsBody.innerHTML = '<tr><td colspan="6" class="dgsh-admin-loading">Loading scan statistics...</td></tr>';

        try {
          const db = firebase.firestore();
          const usersSnapshot = await db.collection('users').get();
          
          const scanCounts = {};
          const lastScanned = {};
          let totalScans = 0;

          usersSnapshot.forEach(doc => {
            const userData = doc.data();
            if (userData.scannedCodes && Array.isArray(userData.scannedCodes)) {
              userData.scannedCodes.forEach(scan => {
                const code = scan.code;
                
                scanCounts[code] = (scanCounts[code] || 0) + 1;
                totalScans++;

                const scanTime = scan.timestamp;
                if (!lastScanned[code] || scanTime > lastScanned[code]) {
                  lastScanned[code] = scanTime;
                }
              });
            }
          });

          document.getElementById('total-scans').textContent = totalScans;

          let mostScannedCode = null;
          let maxScans = 0;
          Object.entries(scanCounts).forEach(([code, count]) => {
            if (count > maxScans) {
              maxScans = count;
              mostScannedCode = code;
            }
          });

          if (mostScannedCode) {
            const mostScannedQR = _qrCodes.find(qr => qr.code === mostScannedCode);
            const locationText = mostScannedQR ? 
              `Location ${mostScannedQR.locationNumber}` : 
              mostScannedCode;
            document.getElementById('most-scanned-location').textContent = locationText;
          } else {
            document.getElementById('most-scanned-location').textContent = 'None';
          }

          let html = '';
          _qrCodes.forEach(qr => {
            const scans = scanCounts[qr.code] || 0;
            const lastScan = lastScanned[qr.code];
            const lastScanText = lastScan ? 
              new Date(lastScan).toLocaleString() : 
              'Never';

            html += `
              <tr>
                <td>Location ${qr.locationNumber || '?'} - ${qr.locationName || qr.description || 'Unnamed'}</td>
                <td><code>${qr.code}</code></td>
                <td>${scans}</td>
                <td>${lastScanText}</td>
                <td><span class="${qr.active !== false ? 'qr-status-active' : 'qr-status-inactive'}">${qr.active !== false ? 'Active' : 'Inactive'}</span></td>
                <td>
                  <button class="dgsh-admin-view-qr-btn" data-qr-code="${qr.code}">View Details</button>
                </td>
              </tr>
            `;
          });

          if (html === '') {
            html = '<tr><td colspan="6" class="dgsh-admin-empty">No QR codes found.</td></tr>';
          }

          statsBody.innerHTML = html;

          document.querySelectorAll('#qr-stats-body .dgsh-admin-view-qr-btn').forEach(btn => {
            btn.addEventListener('click', function() {
              const qrCode = this.getAttribute('data-qr-code');
              showQRModal(qrCode);
            });
          });

        } catch (error) {
          console.error("Error loading scan statistics:", error);
          statsBody.innerHTML = '<tr><td colspan="6" class="dgsh-admin-error">Error loading statistics</td></tr>';
        }
      };

      const showQRModal = function(qrCode) {
        const qrData = _qrCodes.find(qr => qr.code === qrCode);
        if (!qrData) return;

        const modal = document.getElementById('dgsh-modal');
        const title = document.getElementById('dgsh-modal-title');
        const qrContainer = document.getElementById('dgsh-modal-qr');
        const codeDisplay = document.getElementById('dgsh-modal-code');
        const urlDisplay = document.getElementById('dgsh-modal-url');

        if (!modal) return;

        const qrUrl = `${window.location.origin}/pages/scavenger-hunt?code=${qrCode}`;

        title.textContent = `QR Code: Location ${qrData.locationNumber}`;
        qrContainer.innerHTML = `<img src="https://api.qrserver.com/v1/create-qr-code/?size=300x300&data=${encodeURIComponent(qrUrl)}" alt="QR Code" width="300" height="300">`;
        codeDisplay.textContent = qrCode;
        urlDisplay.textContent = qrUrl;

        modal.style.display = 'flex';

        const downloadBtn = document.getElementById('dgsh-modal-download');
        const printBtn = document.getElementById('dgsh-modal-print');

        if (downloadBtn) {
          downloadBtn.onclick = () => {
            const link = document.createElement('a');
            link.href = `https://api.qrserver.com/v1/create-qr-code/?size=300x300&data=${encodeURIComponent(qrUrl)}`;
            link.download = `qr-location-${qrData.locationNumber}.png`;
            link.click();
          };
        }

        if (printBtn) {
          printBtn.onclick = () => {
            const printTemplate = document.getElementById('print-template');
            
            if (printTemplate) {
              printTemplate.innerHTML = `
                <div style="text-align: center; padding: 20px;">
                  <h2>Doomlings Scavenger Hunt</h2>
                  <h3>Location ${qrData.locationNumber}: ${qrData.locationName || qrData.description || 'Unnamed'}</h3>
                  <img src="https://api.qrserver.com/v1/create-qr-code/?size=300x300&data=${encodeURIComponent(qrUrl)}" width="300" height="300">
                  <p><strong>QR Code:</strong> ${qrCode}</p>
                  <p><strong>URL:</strong> ${qrUrl}</p>
                </div>
              `;
              window.print();
            }
          };
        }
      };

      const exportQRCodes = function() {
        if (_qrCodes.length === 0) {
          alert('No QR codes to export.');
          return;
        }

        const csvHeader = 'QR Code,Location Number,Location Name,Status,URL\n';
        const csvContent = _qrCodes.map(qr => {
          const url = `${window.location.origin}/pages/scavenger-hunt?code=${qr.code}`;
          return `"${qr.code}",${qr.locationNumber || ''},"${qr.locationName || qr.description || ''}","${qr.active !== false ? 'Active' : 'Inactive'}","${url}"`;
        }).join('\n');

        const blob = new Blob([csvHeader + csvContent], { type: 'text/csv' });
        const url = URL.createObjectURL(blob);
        const link = document.createElement('a');
        link.href = url;
        link.download = `qr-codes-${new Date().toISOString().split('T')[0]}.csv`;
        link.click();
        URL.revokeObjectURL(url);

        alert(`Exported ${_qrCodes.length} QR codes to CSV file.`);
      };

      const updateLegacyGrid = function() {
        const codesGrid = document.getElementById('dgsh-codes-grid');
        if (!codesGrid || _qrCodes.length === 0) {
          if (codesGrid) codesGrid.innerHTML = '<div class="dgsh-admin-loading">No QR codes available</div>';
          return;
        }

        const html = _qrCodes.map((qr) => {
          const qrUrl = `${window.location.origin}/pages/scavenger-hunt?code=${qr.code}`;
          
          return `<div class="dgsh-admin-secure-code-item">
            <div class="dgsh-admin-secure-code-qr">
              <img src="https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=${encodeURIComponent(qrUrl)}" 
                  alt="QR Code for ${qr.code}" width="150" height="150">
            </div>
            <div class="dgsh-admin-secure-code-info">
              <div class="dgsh-admin-secure-code-location">Location ${qr.locationNumber || '?'}</div>
              <div class="dgsh-admin-secure-code-value">${qr.code}</div>
              <div class="dgsh-admin-secure-code-actions">
                <button class="dgsh-admin-download-qr" onclick="downloadQR('${qr.code}', '${qr.locationNumber}')">Download</button>
                <button class="dgsh-admin-view-code" onclick="viewQR('${qr.code}')">View</button>
              </div>
            </div>
          </div>`;
        }).join('');
        
        codesGrid.innerHTML = html;
      };

      // Expose methods for legacy compatibility
      window.downloadQR = function(code, location) {
        const qrUrl = `${window.location.origin}/pages/scavenger-hunt?code=${code}`;
        const link = document.createElement('a');
        link.href = `https://api.qrserver.com/v1/create-qr-code/?size=300x300&data=${encodeURIComponent(qrUrl)}`;
        link.download = `qr-location-${location}.png`;
        link.click();
      };

      window.viewQR = function(code) {
        showQRModal(code);
      };

      return {
        init: init,
        loadQRCodes: loadQRCodes,
        getQRCodes: function() { return _qrCodes; }
      };
    })();

    // Initialize the QR manager
    DGSHQRManager.init();

    // Set up print all functionality
    const printAllBtn = document.getElementById('dgsh-print-all-btn');
    if (printAllBtn) {
      printAllBtn.addEventListener('click', function() {
        const qrCodes = DGSHQRManager.getQRCodes();
        if (!qrCodes || qrCodes.length === 0) {
          alert('No QR codes available to print.');
          return;
        }

        const codesHtml = qrCodes.map((qr) => {
          const qrUrl = `${window.location.origin}/pages/scavenger-hunt?code=${qr.code}`;
          
          return `
            <div class="dgsh-print-item">
              <div class="dgsh-print-qr">
                <img src="https://api.qrserver.com/v1/create-qr-code/?size=300x300&data=${encodeURIComponent(qrUrl)}" alt="QR Code" width="300" height="300">
              </div>
              <div class="dgsh-print-info">
                <div class="dgsh-print-location">Location ${qr.locationNumber}</div>
                <div class="dgsh-print-code">${qr.code}</div>
              </div>
            </div>
          `;
        }).join('');
        
        const printTemplate = document.getElementById('print-template');
        if (printTemplate) {
          printTemplate.innerHTML = `<div class="dgsh-print-grid">${codesHtml}</div>`;
          window.print();
        }
      });
    }

// Enhanced Legacy stats update with proper loading states
setTimeout(async function() {
  const totalScansEl = document.getElementById('total-scans');
  const uniqueUsersEl = document.getElementById('unique-users');
  const completionRateEl = document.getElementById('completion-rate');
  const mostScannedEl = document.getElementById('most-scanned');
  const locationStatsBody = document.getElementById('location-stats-body');
  
  // Show loading state
  if (totalScansEl) totalScansEl.textContent = '...';
  if (uniqueUsersEl) uniqueUsersEl.textContent = '...';
  if (completionRateEl) completionRateEl.textContent = '...';
  if (mostScannedEl) mostScannedEl.textContent = '...';
  
  try {
    const db = firebase.firestore();
    
    // Check if there are any users at all
    const usersSnapshot = await db.collection('users').get();
    
    if (usersSnapshot.empty) {
      // No users found - show empty state
      if (totalScansEl) totalScansEl.textContent = '0';
      if (uniqueUsersEl) uniqueUsersEl.textContent = '0';
      if (completionRateEl) completionRateEl.textContent = '0%';
      if (mostScannedEl) mostScannedEl.textContent = 'None';
      
      if (locationStatsBody) {
        locationStatsBody.innerHTML = `
          <tr>
            <td colspan="5" class="dgsh-admin-empty" style="text-align: center; padding: 30px; color: #6c757d; font-style: italic;">
              No scan data available yet. Users need to start scanning QR codes to see statistics here.
            </td>
          </tr>
        `;
      }
      return;
    }
    
    let totalScans = 0;
    let uniqueUsers = 0;
    let completedUsers = 0;
    const codeScans = {};
    
    // Process user data
    usersSnapshot.forEach(doc => {
      const userData = doc.data();
      
      if (userData.scannedCodes && userData.scannedCodes.length > 0) {
        uniqueUsers++;
        totalScans += userData.scannedCodes.length;
        
        // Count scans per code
        userData.scannedCodes.forEach(scan => {
          const code = scan.code;
          codeScans[code] = (codeScans[code] || 0) + 1;
        });
        
        if (userData.scannedCodes.length >= 12) {
          completedUsers++;
        }
      }
    });
    
    // Update summary stats
    if (totalScansEl) totalScansEl.textContent = totalScans;
    if (uniqueUsersEl) uniqueUsersEl.textContent = uniqueUsers;
    if (completionRateEl) {
      const completionRate = uniqueUsers > 0 ? Math.round((completedUsers / uniqueUsers) * 100) : 0;
      completionRateEl.textContent = completionRate + '%';
    }
    
    // Find most scanned location
    let mostScannedCode = null;
    let maxScans = 0;
    Object.entries(codeScans).forEach(([code, count]) => {
      if (count > maxScans) {
        maxScans = count;
        mostScannedCode = code;
      }
    });
    
    if (mostScannedCode && mostScannedEl) {
      // Try to get location info from QR codes list
      const qrCodes = DGSHQRManager.getQRCodes();
      const qrData = qrCodes.find(qr => qr.code === mostScannedCode);
      const locationText = qrData ? 
        `Location ${qrData.locationNumber}` : 
        mostScannedCode;
      mostScannedEl.textContent = locationText;
    } else if (mostScannedEl) {
      mostScannedEl.textContent = 'None';
    }
    
    // Update location stats table
    if (locationStatsBody) {
      if (Object.keys(codeScans).length === 0) {
        locationStatsBody.innerHTML = `
          <tr>
            <td colspan="5" class="dgsh-admin-empty" style="text-align: center; padding: 30px; color: #6c757d; font-style: italic;">
              No QR codes have been scanned yet. Once users start scanning, statistics will appear here.
            </td>
          </tr>
        `;
      } else {
        // Get QR codes for reference
        const qrCodes = DGSHQRManager.getQRCodes();
        
        // Create stats for each scanned code
        const codeStatsArray = Object.entries(codeScans).map(([code, scanCount]) => {
          const qrData = qrCodes.find(qr => qr.code === code);
          return {
            code: code,
            scanCount: scanCount,
            locationNumber: qrData ? qrData.locationNumber : '?',
            locationName: qrData ? (qrData.locationName || qrData.description || 'Unnamed') : 'Unknown',
            active: qrData ? (qrData.active !== false) : false
          };
        });
        
        // Sort by scan count (descending)
        codeStatsArray.sort((a, b) => b.scanCount - a.scanCount);
        
        let html = '';
        codeStatsArray.forEach(stat => {
          html += `
            <tr>
              <td>Location ${stat.locationNumber} - ${stat.locationName}</td>
              <td><code>${stat.code}</code></td>
              <td>${stat.scanCount}</td>
              <td>Recent</td>
              <td><span class="${stat.active ? 'status-active' : 'status-inactive'}">${stat.active ? 'Active' : 'Inactive'}</span></td>
            </tr>
          `;
        });
        
        locationStatsBody.innerHTML = html;
      }
    }

  } catch (error) {
    console.error("Error updating legacy stats:", error);
    
    // Show error state
    if (totalScansEl) totalScansEl.textContent = 'Error';
    if (uniqueUsersEl) uniqueUsersEl.textContent = 'Error';
    if (completionRateEl) completionRateEl.textContent = 'Error';
    if (mostScannedEl) mostScannedEl.textContent = 'Error';
    
    if (locationStatsBody) {
      locationStatsBody.innerHTML = `
        <tr>
          <td colspan="5" class="dgsh-admin-error" style="text-align: center; padding: 20px; color: #dc3545; background-color: #f8d7da;">
            Error loading statistics. Please refresh the page and try again.
          </td>
        </tr>
      `;
    }
  }
}, 2000); // Wait 2 seconds for QR codes to load first

  });
</script>